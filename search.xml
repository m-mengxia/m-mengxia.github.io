<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>01 起步 - 旋转的立方体 - Threejs入门</title>
    <url>/threejs/01%20%E8%B5%B7%E6%AD%A5%20-%20%E6%97%8B%E8%BD%AC%E7%9A%84%E7%AB%8B%E6%96%B9%E4%BD%93%20-%20Threejs%E5%85%A5%E9%97%A8-519b1daaef61/</url>
    <content><![CDATA[<p>使用 Threejs 框架写一个最简单的立方体效果，了解场景(Scene), 相机(Camera), 渲染器(Renderer)的基本概念和使用方式。 <a href="/htmls/three.js/Threejs.html?demourl=01 起步 - 旋转的立方体 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/01 起步 - 旋转的立方体 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>这次使用的是常见的透视投影相机(PerspectiveCamera)，该方法的四个参数分别为 视野角度、宽高比、摄像机允许观察的最近距离、摄像机允许观察的最远距离。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建场景</span></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建相机</span></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建渲染器，开启抗锯齿</span></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个立方体</span></span><br><span class="line"><span class="keyword">const</span> boxGeo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> boxMtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> boxMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(boxGeo, boxMtr)</span><br><span class="line">scene.<span class="title function_">add</span>(boxMesh)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 循环动画</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params"></span>) &#123;</span><br><span class="line">  boxMesh.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">0.01</span></span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animation)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">animation</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/01 起步 - 旋转的立方体 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>02 要有光 - 场景中添加光源 - Threejs入门</title>
    <url>/threejs/02%20%E8%A6%81%E6%9C%89%E5%85%89%20-%20%E5%9C%BA%E6%99%AF%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%85%89%E6%BA%90%20-%20Threejs%E5%85%A5%E9%97%A8-5f3ca0398cac/</url>
    <content><![CDATA[<p>有些材质，比如标准网格材质，比如需要有光源才能看到。 <a href="/htmls/three.js/Threejs.html?demourl=02 要有光 - 场景中添加光源 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/02 要有光 - 场景中添加光源 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">50</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span>/<span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> boxGeo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> boxMtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshStandardMaterial</span>() <span class="comment">// 设置标准网格材质</span></span><br><span class="line"><span class="keyword">const</span> boxMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(boxGeo, boxMtr)</span><br><span class="line">scene.<span class="title function_">add</span>(boxMesh)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建环境光</span></span><br><span class="line"><span class="keyword">const</span> ambLight  = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>()</span><br><span class="line"><span class="comment">// 创建平行光</span></span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>()</span><br><span class="line"><span class="comment">// 设置平行光位置</span></span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment">// 添加到场景中</span></span><br><span class="line">scene.<span class="title function_">add</span>(ambLight, dirLight)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params"></span>) &#123;</span><br><span class="line">  boxMesh.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">0.01</span></span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animation)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">animation</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/02 要有光 - 场景中添加光源 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>05 GUI可视化调整三维场景 - Threejs入门</title>
    <url>/threejs/05%20GUI%E5%8F%AF%E8%A7%86%E5%8C%96%E8%B0%83%E6%95%B4%E4%B8%89%E7%BB%B4%E5%9C%BA%E6%99%AF%20-%20Threejs%E5%85%A5%E9%97%A8-e39530d0b563/</url>
    <content><![CDATA[<p>通过GUI库，可以对三维场景参数动态调整，方便调试。 <a href="/htmls/three.js/Threejs.html?demourl=05 GUI可视化调整三维场景 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/05 GUI可视化调整三维场景 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入GUI</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">GUI</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/libs/lil-gui.module.min.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> boxGeo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> boxMtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> boxMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(boxGeo, boxMtr)</span><br><span class="line">scene.<span class="title function_">add</span>(boxMesh)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化gui</span></span><br><span class="line"><span class="keyword">const</span> gui = <span class="keyword">new</span> <span class="title function_">GUI</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态修改模型颜色 (颜色选择器 形式)</span></span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">addColor</span>(&#123; <span class="attr">color</span>: <span class="string">&#x27;#fff&#x27;</span> &#125;, <span class="string">&#x27;color&#x27;</span>)</span><br><span class="line">  .<span class="title function_">name</span>(<span class="string">&#x27;颜色&#x27;</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    boxMesh.<span class="property">material</span>.<span class="property">color</span>.<span class="title function_">set</span>(value)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态控制模型显示隐藏 (勾选框 样式)</span></span><br><span class="line">gui</span><br><span class="line">  .<span class="title function_">add</span>(&#123; <span class="attr">show</span>: <span class="literal">true</span> &#125;, <span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">  .<span class="title function_">name</span>(<span class="string">&#x27;显示隐藏&#x27;</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    boxMesh.<span class="property">material</span>.<span class="property">visible</span> = value</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个分组</span></span><br><span class="line"><span class="keyword">const</span> twoGui = gui.<span class="title function_">addFolder</span>(<span class="string">&#x27;位置大小&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改 boxMesh x位置, 设置一个友好的名字和精细度</span></span><br><span class="line">twoGui.<span class="title function_">add</span>(boxMesh.<span class="property">position</span>, <span class="string">&#x27;x&#x27;</span>, -<span class="number">2</span>, <span class="number">2</span>).<span class="title function_">name</span>(<span class="string">&#x27;X轴&#x27;</span>).<span class="title function_">step</span>(<span class="number">0.01</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态控制模型大小 (下拉框 样式)</span></span><br><span class="line">twoGui</span><br><span class="line">  .<span class="title function_">add</span>(&#123; <span class="attr">scale</span>: <span class="number">1</span> &#125;, <span class="string">&#x27;scale&#x27;</span>, &#123;</span><br><span class="line">    大: <span class="number">2</span>,</span><br><span class="line">    默认: <span class="number">1</span>,</span><br><span class="line">    小: <span class="number">0.5</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">  .<span class="title function_">name</span>(<span class="string">&#x27;缩放&#x27;</span>)</span><br><span class="line">  .<span class="title function_">onChange</span>(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    boxMesh.<span class="property">scale</span>.<span class="title function_">set</span>(value, value, value)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params"></span>) &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animation)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">animation</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/05 GUI可视化调整三维场景 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>03 自由掌控 - 相机轨道控制器 和 帧率展示 - Threejs入门</title>
    <url>/threejs/03%20%E8%87%AA%E7%94%B1%E6%8E%8C%E6%8E%A7%20-%20%E7%9B%B8%E6%9C%BA%E8%BD%A8%E9%81%93%E6%8E%A7%E5%88%B6%E5%99%A8%20%E5%92%8C%20%E5%B8%A7%E7%8E%87%E5%B1%95%E7%A4%BA%20-%20Threejs%E5%85%A5%E9%97%A8-022500ae8861/</url>
    <content><![CDATA[<p>轨道控制器(OrbitControls) 是一种摄像机控制器，用鼠标改变不同视角查看场景中的内容。同时增加帧率展示，便于知道运行是否流畅，调试性能的绝佳助手。 <a href="/htmls/three.js/Threejs.html?demourl=03 自由掌控 - 相机轨道控制器 和 帧率展示 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/03 自由掌控 - 相机轨道控制器 和 帧率展示 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入轨道控制器</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span></span><br><span class="line"><span class="comment">// 引入Stats</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Stats</span> <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/libs/stats.module.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">50</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span>/<span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> boxGeo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> boxMtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> boxMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(boxGeo, boxMtr)</span><br><span class="line">scene.<span class="title function_">add</span>(boxMesh)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建轨道控制器, 传入需要控制的相机，和dom元素</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建stats</span></span><br><span class="line"><span class="keyword">const</span> stats = <span class="keyword">new</span> <span class="title class_">Stats</span>()</span><br><span class="line"><span class="comment">// 将stats放入页面中</span></span><br><span class="line">$app.<span class="title function_">appendChild</span>(stats.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 实时更新stats信息</span></span><br><span class="line">  stats.<span class="title function_">update</span>()</span><br><span class="line"></span><br><span class="line">  boxMesh.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">0.01</span></span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animation)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">animation</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/03 自由掌控 - 相机轨道控制器 和 帧率展示 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>04 可大可小 -  自适应页面 和 双击页面全屏效果 - Threejs入门</title>
    <url>/threejs/04%20%E5%8F%AF%E5%A4%A7%E5%8F%AF%E5%B0%8F%20-%20%20%E8%87%AA%E9%80%82%E5%BA%94%E9%A1%B5%E9%9D%A2%20%E5%92%8C%20%E5%8F%8C%E5%87%BB%E9%A1%B5%E9%9D%A2%E5%85%A8%E5%B1%8F%E6%95%88%E6%9E%9C%20-%20Threejs%E5%85%A5%E9%97%A8-75b86275a72a/</url>
    <content><![CDATA[<p>通过监听页面大小的变动，动态修改渲染器大小、相机宽高比和投影矩阵。 <a href="/htmls/three.js/Threejs.html?demourl=04 可大可小 -  自适应页面 和 双击页面全屏效果 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/04 可大可小 -  自适应页面 和 双击页面全屏效果 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h2 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(<span class="number">50</span>, <span class="variable language_">window</span>.<span class="property">innerWidth</span>/<span class="variable language_">window</span>.<span class="property">innerHeight</span>, <span class="number">1</span>, <span class="number">1000</span>)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> boxGeo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">const</span> boxMtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> boxMesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(boxGeo, boxMtr)</span><br><span class="line">scene.<span class="title function_">add</span>(boxMesh)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animation</span>(<span class="params"></span>) &#123;</span><br><span class="line">  boxMesh.<span class="property">rotation</span>.<span class="property">y</span> += <span class="number">0.01</span></span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animation)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">animation</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听页面尺寸变化</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 重新设置渲染器大小</span></span><br><span class="line">  renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">  <span class="comment">// 重新设置相机宽高比</span></span><br><span class="line">  camera.<span class="property">aspect</span> = <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span></span><br><span class="line">  <span class="comment">// 重新设置相机投影矩阵</span></span><br><span class="line">  camera.<span class="title function_">updateProjectionMatrix</span>()</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听鼠标双击事件</span></span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;dblclick&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 判断为全屏时退出全屏，否则进入全屏</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable language_">document</span>.<span class="property">fullscreenElement</span>) &#123;</span><br><span class="line">    <span class="variable language_">document</span>.<span class="title function_">exitFullscreen</span>()</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    renderer.<span class="property">domElement</span>.<span class="title function_">requestFullscreen</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/04 可大可小 -  自适应页面 和 双击页面全屏效果 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>07 UV贴图 - 实现一个地球 - Threejs入门</title>
    <url>/threejs/07%20UV%E8%B4%B4%E5%9B%BE%20-%20%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%9C%B0%E7%90%83%20-%20Threejs%E5%85%A5%E9%97%A8-7ffd6d7d591b/</url>
    <content><![CDATA[<p>创建一个球体，加上一个地球的图片，一个地球就做好了~ <a href="/htmls/three.js/Threejs.html?demourl=07 UV贴图 - 实现一个地球 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/07 UV贴图 - 实现一个地球 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个纹理加载器对象</span></span><br><span class="line"><span class="keyword">const</span> txLoader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>()</span><br><span class="line"><span class="keyword">const</span> txImg = txLoader.<span class="title function_">load</span>(<span class="string">&#x27;/imgs/Earth.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个网格几何体</span></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">SphereGeometry</span>(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个网格材质</span></span><br><span class="line"><span class="keyword">const</span> mtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: txImg</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个网格，并添加到场景中</span></span><br><span class="line"><span class="keyword">const</span> mesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geo, mtr)</span><br><span class="line">scene.<span class="title function_">add</span>(mesh)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate)</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">animate</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/07 UV贴图 - 实现一个地球 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>06 自由发挥 - 空白几何体 - Threejs入门</title>
    <url>/threejs/06%20%E8%87%AA%E7%94%B1%E5%8F%91%E6%8C%A5%20-%20%E7%A9%BA%E7%99%BD%E5%87%A0%E4%BD%95%E4%BD%93%20-%20Threejs%E5%85%A5%E9%97%A8-82085ffe7d70/</url>
    <content><![CDATA[<p>缓冲类型几何体(BufferGeometry)，允许开发者自由地定义其形状和结构。通过精心设计顶点数据，你可以在这片空白的画布上绘制出任何所需的几何形状，从而创造出丰富多彩的三维模型。 <a href="/htmls/three.js/Threejs.html?demourl=06 自由发挥 - 空白几何体 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/06 自由发挥 - 空白几何体 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>点模型 Points 有自己的点材质 PointsMaterial。<br>线模型 Line 有自己的线材质 LineBasicMaterial 和 LineDashedMaterial。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个空的几何体对象</span></span><br><span class="line"><span class="keyword">const</span> emptyGeometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建顶点数据，用类型化数组存储, 0, 0, 0, 5, 0, 0, 0, 5, 0</span></span><br><span class="line"><span class="keyword">const</span> vertices = <span class="keyword">new</span> <span class="title class_">Float32Array</span>([</span><br><span class="line">  <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>, <span class="number">0</span></span><br><span class="line">])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建位置属性缓冲区对象，三个为一组，表示xyz对象</span></span><br><span class="line"><span class="keyword">const</span> positionAttr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(vertices, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置几何体的顶点位置属性</span></span><br><span class="line">emptyGeometry.<span class="property">attributes</span>.<span class="property">position</span> = positionAttr</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个点模型材质</span></span><br><span class="line"><span class="keyword">const</span> pointMtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PointsMaterial</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个点模型对象，并添加到场景中</span></span><br><span class="line"><span class="keyword">const</span> pointsObj = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Points</span>(emptyGeometry, pointMtr)</span><br><span class="line">scene.<span class="title function_">add</span>(pointsObj)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个线材质</span></span><br><span class="line"><span class="keyword">const</span> lineMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个线模型对象</span></span><br><span class="line"><span class="comment">// 连续的线</span></span><br><span class="line"><span class="comment">// const lineObj = new THREE.Line(emptyGeometry, lineMaterial)</span></span><br><span class="line"><span class="comment">// 头尾相接线</span></span><br><span class="line"><span class="comment">// const lineObj = new THREE.LineLoop(emptyGeometry, lineMaterial)</span></span><br><span class="line"><span class="comment">// 非连续的线段</span></span><br><span class="line"><span class="keyword">const</span> lineObj = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineSegments</span>(emptyGeometry, lineMaterial)</span><br><span class="line">lineObj.<span class="property">position</span>.<span class="title function_">set</span>(-<span class="number">2</span>, -<span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个网格材质</span></span><br><span class="line"><span class="keyword">const</span> meshMaterial = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 定义一个网格对象</span></span><br><span class="line"><span class="keyword">const</span> meshObj = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(emptyGeometry, meshMaterial)</span><br><span class="line">meshObj.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">2</span>, <span class="number">2</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">scene.<span class="title function_">add</span>(lineObj, meshObj)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate)</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">animate</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/06 自由发挥 - 空白几何体 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>08 贴图阵列 - 实现一个瓷砖地板 - Threejs入门</title>
    <url>/threejs/08%20%E8%B4%B4%E5%9B%BE%E9%98%B5%E5%88%97%20-%20%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%93%B7%E7%A0%96%E5%9C%B0%E6%9D%BF%20-%20Threejs%E5%85%A5%E9%97%A8-095375333dfe/</url>
    <content><![CDATA[<p>通过开启阵列模式，设置x,y的重复次数，重复图案就出现啦 <a href="/htmls/three.js/Threejs.html?demourl=08 贴图阵列 - 实现一个瓷砖地板 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/08 贴图阵列 - 实现一个瓷砖地板 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> txLoader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>()</span><br><span class="line"><span class="keyword">const</span> txImg = txLoader.<span class="title function_">load</span>(<span class="string">&#x27;/htmls/three.js/imgs/瓷砖.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启阵列模式</span></span><br><span class="line">txImg.<span class="property">wrapS</span> = <span class="variable constant_">THREE</span>.<span class="property">RepeatWrapping</span></span><br><span class="line">txImg.<span class="property">wrapT</span> = <span class="variable constant_">THREE</span>.<span class="property">RepeatWrapping</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置重复多少次</span></span><br><span class="line">txImg.<span class="property">repeat</span>.<span class="title function_">set</span>(<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>(<span class="number">30</span>, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: txImg</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geo, mtr)</span><br><span class="line">scene.<span class="title function_">add</span>(mesh)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate)</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">animate</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/08 贴图阵列 - 实现一个瓷砖地板 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>10 加载模型 - Threejs入门</title>
    <url>/threejs/10%20%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9E%8B%20-%20Threejs%E5%85%A5%E9%97%A8-d990f9b0f70b/</url>
    <content><![CDATA[<p>使用 GLTFLoader 就可以加载常见的gltf模型了~ <a href="/htmls/three.js/Threejs.html?demourl=10 加载模型 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/10 加载模型 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入gltf加载器</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">GLTFLoader</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/loaders/GLTFLoader.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 实例化加载器</span></span><br><span class="line"><span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">GLTFLoader</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载gltf模型</span></span><br><span class="line">loader.<span class="title function_">load</span>(<span class="string">&#x27;/htmls/three.js/models/立方体.glb&#x27;</span>, <span class="function">(<span class="params">gltf</span>) =&gt;</span> &#123;</span><br><span class="line">  scene.<span class="title function_">add</span>(gltf.<span class="property">scene</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置光源</span></span><br><span class="line"><span class="keyword">const</span> light = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>(<span class="literal">null</span>, <span class="number">2</span>)</span><br><span class="line">light.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">20</span>, <span class="number">20</span>, <span class="number">30</span>)</span><br><span class="line">scene.<span class="title function_">add</span>(<span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>(<span class="literal">null</span>, <span class="number">2</span>), light)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate)</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">animate</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/10 加载模型 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>09 透明贴图和UV动画 - Threejs入门</title>
    <url>/threejs/09%20%E9%80%8F%E6%98%8E%E8%B4%B4%E5%9B%BE%E5%92%8CUV%E5%8A%A8%E7%94%BB%20-%20Threejs%E5%85%A5%E9%97%A8-3113d5c26125/</url>
    <content><![CDATA[<p>在材质中设置 transparent 属性，开启透明选项，然后动态修改贴图的偏移属性，贴图就动起来啦~ <a href="/htmls/three.js/Threejs.html?demourl=09 透明贴图和UV动画 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/09 透明贴图和UV动画 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/examples/jsm/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> $app = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">1000</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>(&#123;</span><br><span class="line">  <span class="attr">antialias</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">$app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> txLoader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>()</span><br><span class="line"><span class="keyword">const</span> txImg = txLoader.<span class="title function_">load</span>(<span class="string">&#x27;/htmls/three.js/imgs/箭头.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">txImg.<span class="property">wrapS</span> = <span class="variable constant_">THREE</span>.<span class="property">RepeatWrapping</span></span><br><span class="line">txImg.<span class="property">repeat</span>.<span class="title function_">set</span>(<span class="number">10</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PlaneGeometry</span>(<span class="number">30</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开启透明选项</span></span><br><span class="line"><span class="keyword">const</span> mtr = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: txImg,</span><br><span class="line">  <span class="attr">transparent</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geo, mtr)</span><br><span class="line"><span class="keyword">const</span> meshBack = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geo, <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshBasicMaterial</span>(&#123;<span class="attr">color</span>: <span class="number">0xcccccc</span>&#125;))</span><br><span class="line">meshBack.<span class="property">position</span>.<span class="property">z</span> = -<span class="number">10</span></span><br><span class="line">scene.<span class="title function_">add</span>(mesh, meshBack)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">animate</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// UV偏移动画</span></span><br><span class="line">  txImg.<span class="property">offset</span>.<span class="property">x</span> -= <span class="number">0.01</span></span><br><span class="line">  <span class="title function_">requestAnimationFrame</span>(animate)</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">animate</span>()</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/09 透明贴图和UV动画 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>11 PBR材质 - Threejs入门</title>
    <url>/threejs/11%20PBR%E6%9D%90%E8%B4%A8%20-%20Threejs%E5%85%A5%E9%97%A8-eeccd3647037/</url>
    <content><![CDATA[<p>使用 PBR材质 可以让模型模拟真实世界的材质，真实度暴增~~ 更多材质参数可以看<a href="https://threejs.org/docs/index.html?q=sta#api/zh/materials/MeshStandardMaterial.metalness" target="_blank">[这里]</a> <a href="/htmls/three.js/Threejs.html?demourl=11 PBR材质 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/11 PBR材质 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">50</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line"><span class="keyword">const</span> sketch = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>)</span><br><span class="line">sketch.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BoxGeometry</span>()</span><br><span class="line"><span class="keyword">const</span> mat = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshStandardMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">metalness</span>: <span class="number">0.1</span>, <span class="comment">// 金属度</span></span><br><span class="line">  <span class="attr">roughness</span>: <span class="number">0.1</span>, <span class="comment">// 粗糙度</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> cube = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geo, mat)</span><br><span class="line">scene.<span class="title function_">add</span>(cube)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ambient = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>(<span class="string">&#x27;#fff&#x27;</span>, <span class="number">0.1</span>)</span><br><span class="line">scene.<span class="title function_">add</span>(ambient)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>()</span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">1</span>, <span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line">scene.<span class="title function_">add</span>(dirLight)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, sketch)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/11 PBR材质 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>12 画一个圆圈吧 - Threejs入门</title>
    <url>/threejs/12%20%E7%94%BB%E4%B8%80%E4%B8%AA%E5%9C%86%E5%9C%88%E5%90%A7%20-%20Threejs%E5%85%A5%E9%97%A8-e4156cb081a2/</url>
    <content><![CDATA[<p>创建一个由点组成的圆，并将其添加到场景中。 <a href="/htmls/three.js/Threejs.html?demourl=12 画一个圆圈吧 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/12 画一个圆圈吧 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>根据当前点的角度 angle, 使用 cos,sin 计算点的 x,y 坐标, attribute 是一个 THREE.BufferAttribute 对象，用于描述几何体的顶点位置。它将 vertices 数组指定为 3 个值一组（x, y, z），每组表示一个顶点。geo.attributes.position &#x3D; attribute 将几何体的 position 属性设为 attribute，从而定义了 geo 的形状为圆形。<br>还有一种方法是 geo.setFromPoints，也是赋值给 geo.attributes.position 属性。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">60</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span><br><span class="line"><span class="keyword">const</span> mat = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> R = <span class="number">5</span></span><br><span class="line"><span class="keyword">const</span> N = <span class="number">50</span></span><br><span class="line"><span class="keyword">const</span> sp = (<span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>) / N</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">  <span class="keyword">const</span> angle = sp * i</span><br><span class="line">  <span class="keyword">const</span> x = R * <span class="title class_">Math</span>.<span class="title function_">cos</span>(angle)</span><br><span class="line">  <span class="keyword">const</span> y = R * <span class="title class_">Math</span>.<span class="title function_">sin</span>(angle)</span><br><span class="line">  arr.<span class="title function_">push</span>(x, y, <span class="number">0</span>)</span><br><span class="line">  <span class="comment">// arr.push(new THREE.Vector3(x, y, 0))</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> vertices = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(arr)</span><br><span class="line"><span class="keyword">const</span> attribute = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(vertices, <span class="number">3</span>)</span><br><span class="line">geo.<span class="property">attributes</span>.<span class="property">position</span> = attribute</span><br><span class="line"><span class="comment">// geo.setFromPoints(arr)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineLoop</span>(geo, mat)</span><br><span class="line">scene.<span class="title function_">add</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/12 画一个圆圈吧 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>13 曲线画椭圆 - Threejs入门</title>
    <url>/threejs/13%20%E6%9B%B2%E7%BA%BF%E7%94%BB%E6%A4%AD%E5%9C%86%20-%20Threejs%E5%85%A5%E9%97%A8-dd9535f9ea65/</url>
    <content><![CDATA[<p>使用曲线画一个椭圆，并将其添加到场景中。 <a href="/htmls/three.js/Threejs.html?demourl=13 曲线画椭圆 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/13 曲线画椭圆 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>EllipseCurve，参数如下：<br>aX – 椭圆的中心的 X 坐标，默认值为 0。<br>aY – 椭圆的中心的 Y 坐标，默认值为 0。<br>xRadius – X 轴向上椭圆的半径，默认值为 1。<br>yRadius – Y 轴向上椭圆的半径，默认值为 1。<br>aStartAngle – 以弧度来表示，从正 X 轴算起曲线开始的角度，默认值为 0。<br>aEndAngle – 以弧度来表示，从正 X 轴算起曲线终止的角度，默认值为 2 x Math.PI。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">60</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">50</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 曲线画椭圆</span></span><br><span class="line"><span class="keyword">const</span> arc = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">EllipseCurve</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">25</span>, <span class="number">15</span>, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span> * <span class="number">2</span>)</span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span><br><span class="line">geo.<span class="title function_">setFromPoints</span>(arc.<span class="title function_">getPoints</span>(<span class="number">50</span>))</span><br><span class="line"><span class="keyword">const</span> mat = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geo, mat)</span><br><span class="line">scene.<span class="title function_">add</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/13 曲线画椭圆 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>16 曲线路径管道 - Threejs入门</title>
    <url>/threejs/16%20%E6%9B%B2%E7%BA%BF%E8%B7%AF%E5%BE%84%E7%AE%A1%E9%81%93%20-%20Threejs%E5%85%A5%E9%97%A8-92f769d756a7/</url>
    <content><![CDATA[<p>通过组合曲线绘制一个管道。 <a href="/htmls/three.js/Threejs.html?demourl=16 曲线路径管道 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/16 曲线路径管道 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>使用 CurvePath 将三个曲线组合在一起形成一个连续的路径。通过 TubeGeometry 将路径转换成管道几何体。管道具有 50 段，每段的半径为 0.5，圆形截面有 50 个细分。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">60</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">y</span> = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建环境光</span></span><br><span class="line"><span class="keyword">const</span> ambLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>()</span><br><span class="line"><span class="comment">// 创建平行光</span></span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>()</span><br><span class="line"><span class="comment">// 设置平行光位置</span></span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment">// 添加到场景中</span></span><br><span class="line">scene.<span class="title function_">add</span>(ambLight, dirLight)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用曲线路径，绘制一个管道</span></span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">10</span>)</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>)</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> p4 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">3</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> p5 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> line1 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineCurve3</span>(p1, p2)</span><br><span class="line"><span class="keyword">const</span> curve = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">QuadraticBezierCurve3</span>(p2, p3, p4)</span><br><span class="line"><span class="keyword">const</span> line2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineCurve3</span>(p4, p5)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> curvePath = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CurvePath</span>()</span><br><span class="line">curvePath.<span class="property">curves</span>.<span class="title function_">push</span>(line1, curve, line2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TubeGeometry</span>(curvePath, <span class="number">50</span>, <span class="number">0.5</span>, <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshLambertMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">color</span>: <span class="number">0x00ffff</span>,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> mesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geometry, material)</span><br><span class="line">scene.<span class="title function_">add</span>(mesh)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/16 曲线路径管道 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>14 样条曲线和贝塞尔曲线 - Threejs入门</title>
    <url>/threejs/14%20%E6%A0%B7%E6%9D%A1%E6%9B%B2%E7%BA%BF%E5%92%8C%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF%20-%20Threejs%E5%85%A5%E9%97%A8-8b2be6a8592e/</url>
    <content><![CDATA[<p>对于一个不规则的曲线，很难用圆或者椭圆去描述，用样条曲线和贝塞尔曲线来表达是更好的方式。 <a href="/htmls/three.js/Threejs.html?demourl=14 样条曲线和贝塞尔曲线 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/14 样条曲线和贝塞尔曲线 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">60</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 三维样条曲线</span></span><br><span class="line"><span class="comment">// 三维向量Vector3创建一组顶点坐标</span></span><br><span class="line"><span class="keyword">const</span> arr = [</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">5</span>, <span class="number">2</span>, <span class="number">9</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">6</span>, -<span class="number">6</span>, <span class="number">0</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">7</span>, <span class="number">0</span>, <span class="number">8</span>),</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> curve = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CatmullRomCurve3</span>(arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span><br><span class="line">geo.<span class="title function_">setFromPoints</span>(curve.<span class="title function_">getPoints</span>(<span class="number">50</span>))</span><br><span class="line"><span class="keyword">const</span> mat = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geo, mat)</span><br><span class="line">scene.<span class="title function_">add</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 贝塞尔曲线</span></span><br><span class="line"><span class="comment">// p1、p2、p3表示三个点坐标</span></span><br><span class="line"><span class="comment">// p1、p3是曲线起始点，p2是曲线的控制点</span></span><br><span class="line"><span class="keyword">const</span> p1 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(-<span class="number">8</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> p2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(<span class="number">2</span>, <span class="number">10</span>)</span><br><span class="line"><span class="keyword">const</span> p3 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(<span class="number">8</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> curve2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">QuadraticBezierCurve</span>(p1, p2, p3)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span><br><span class="line">geo2.<span class="title function_">setFromPoints</span>(curve2.<span class="title function_">getPoints</span>(<span class="number">50</span>))</span><br><span class="line"><span class="keyword">const</span> mat2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> line2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geo2, mat2)</span><br><span class="line">scene.<span class="title function_">add</span>(line2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/14 样条曲线和贝塞尔曲线 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>15 组合曲线 - Threejs入门</title>
    <url>/threejs/15%20%E7%BB%84%E5%90%88%E6%9B%B2%E7%BA%BF%20-%20Threejs%E5%85%A5%E9%97%A8-7e414334a716/</url>
    <content><![CDATA[<p>通过组合曲线 CurvePath 对象，可以把直线、圆弧、贝塞尔等线条拼接为一条曲线。 <a href="/htmls/three.js/Threejs.html?demourl=15 组合曲线 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/15 组合曲线 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>整体思路很简单，LineCurve 创建两条直线线段，ArcCurve 绘制一段圆弧线，然后把两段直线和一段圆弧线，通过组合曲线的 CurvePath.curves 属性拼接起来。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">60</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="property">z</span> = <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 组合曲线</span></span><br><span class="line"><span class="keyword">const</span> R = <span class="number">2</span> <span class="comment">//圆弧半径</span></span><br><span class="line"><span class="keyword">const</span> H = <span class="number">5</span> <span class="comment">//直线部分高度</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 直线1</span></span><br><span class="line"><span class="keyword">const</span> line1 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineCurve</span>(</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(R, H),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(R, <span class="number">0</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 圆弧</span></span><br><span class="line"><span class="keyword">const</span> arc = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">ArcCurve</span>(<span class="number">0</span>, <span class="number">0</span>, R, <span class="number">0</span>, <span class="title class_">Math</span>.<span class="property">PI</span>, <span class="literal">true</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直线2</span></span><br><span class="line"><span class="keyword">const</span> line2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineCurve</span>(</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(-R, <span class="number">0</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector2</span>(-R, H)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CurvePath创建一个组合曲线对象</span></span><br><span class="line"><span class="keyword">const</span> curvePath = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CurvePath</span>()</span><br><span class="line"><span class="comment">//line1, arc, line2拼接出来一个U型轮廓曲线，注意顺序</span></span><br><span class="line">curvePath.<span class="property">curves</span>.<span class="title function_">push</span>(line1, arc, line2)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> geo = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferGeometry</span>()</span><br><span class="line">geo.<span class="title function_">setFromPoints</span>(curvePath.<span class="title function_">getSpacedPoints</span>(<span class="number">10</span>))</span><br><span class="line"><span class="keyword">const</span> mat = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">LineBasicMaterial</span>()</span><br><span class="line"><span class="keyword">const</span> line = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Line</span>(geo, mat)</span><br><span class="line">scene.<span class="title function_">add</span>(line)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/15 组合曲线 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>17 山脉地形高度可视化 - Threejs入门</title>
    <url>/threejs/17%20%E5%B1%B1%E8%84%89%E5%9C%B0%E5%BD%A2%E9%AB%98%E5%BA%A6%E5%8F%AF%E8%A7%86%E5%8C%96%20-%20Threejs%E5%85%A5%E9%97%A8-5c51a973adf5/</url>
    <content><![CDATA[<p>利用混合颜色，绘制一个渐变的地形。 <a href="/htmls/three.js/Threejs.html?demourl=17 山脉地形高度可视化 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/17 山脉地形高度可视化 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>加载一个GLTF格式的地形模型，并根据模型的高度数据（y坐标）为每个顶点分配颜色。颜色从蓝色（最低点）渐变到红色（最高点），并应用于模型的材质。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">GLTFLoader</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/loaders/GLTFLoader.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">60</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">20</span>, <span class="number">5</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建环境光</span></span><br><span class="line"><span class="keyword">const</span> ambLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>()</span><br><span class="line"><span class="comment">// 创建平行光</span></span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>()</span><br><span class="line"><span class="comment">// 设置平行光位置</span></span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line"><span class="comment">// 添加到场景中</span></span><br><span class="line">scene.<span class="title function_">add</span>(ambLight, dirLight)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用混合颜色，绘制一个渐变的地形</span></span><br><span class="line"><span class="keyword">const</span> loader = <span class="keyword">new</span> <span class="title class_">GLTFLoader</span>()</span><br><span class="line">loader.<span class="title function_">load</span>(<span class="string">&#x27;./models/地形.glb&#x27;</span>, <span class="function">(<span class="params">glb</span>) =&gt;</span> &#123;</span><br><span class="line">  glb.<span class="property">scene</span>.<span class="property">scale</span>.<span class="title function_">set</span>(<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>)</span><br><span class="line">  <span class="keyword">const</span> mesh = glb.<span class="property">scene</span>.<span class="property">children</span>[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> pos = mesh.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">position</span></span><br><span class="line">  <span class="keyword">const</span> count = pos.<span class="property">count</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> yArr = []</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    yArr.<span class="title function_">push</span>(pos.<span class="title function_">getY</span>(i))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  yArr.<span class="title function_">sort</span>(<span class="function">(<span class="params">a, b</span>) =&gt;</span> a - b)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> minY = yArr[<span class="number">0</span>]</span><br><span class="line">  <span class="keyword">const</span> maxY = yArr[yArr.<span class="property">length</span> - <span class="number">1</span>]</span><br><span class="line">  <span class="keyword">const</span> yHeight = maxY - minY</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> colorArr = []</span><br><span class="line">  <span class="keyword">const</span> c1 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="number">0x0000ff</span>)</span><br><span class="line">  <span class="keyword">const</span> c2 = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Color</span>(<span class="number">0xff0000</span>)</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">    <span class="keyword">const</span> percent = (pos.<span class="title function_">getY</span>(i) - minY) / yHeight</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> c = c1.<span class="title function_">clone</span>().<span class="title function_">lerp</span>(c2, percent)</span><br><span class="line">    colorArr.<span class="title function_">push</span>(c.<span class="property">r</span>, c.<span class="property">g</span>, c.<span class="property">b</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> colors = <span class="keyword">new</span> <span class="title class_">Float32Array</span>(colorArr)</span><br><span class="line"></span><br><span class="line">  mesh.<span class="property">geometry</span>.<span class="property">attributes</span>.<span class="property">color</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">BufferAttribute</span>(colors, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">  mesh.<span class="property">material</span> = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshLambertMaterial</span>(&#123;</span><br><span class="line">    <span class="attr">vertexColors</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>,</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  scene.<span class="title function_">add</span>(glb.<span class="property">scene</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br><span class="line"></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/17 山脉地形高度可视化 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
  <entry>
    <title>18 管道漫游 - Threejs入门</title>
    <url>/threejs/18%20%E7%AE%A1%E9%81%93%E6%BC%AB%E6%B8%B8%20-%20Threejs%E5%85%A5%E9%97%A8-afa667987844/</url>
    <content><![CDATA[<p>创建一个 3D 管道，并让相机沿着管道路径移动，模拟穿过管道的动画效果。 <a href="/htmls/three.js/Threejs.html?demourl=18 管道漫游 - Threejs入门" target="_blank">[ 练一练 ]</a> <a href="/htmls/three.js/18 管道漫游 - Threejs入门" target="_blank">[ 看一看 ]</a></p>
<span id="more"></span>

<p>创建管道和纹理： 使用 Catmull-Rom 曲线定义管道路径，并加载砖墙纹理贴图。<br>相机沿路径移动： 沿着管道路径创建一系列点，相机在动画循环中依次移动到这些点，并朝向下一个点。<br>渲染动画： 在每一帧中，更新相机位置和朝向，并渲染场景，从而实现相机穿过管道的动画效果。</p>
<h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> * <span class="keyword">as</span> <span class="variable constant_">THREE</span> <span class="keyword">from</span> <span class="string">&#x27;three&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">OrbitControls</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;three/addons/controls/OrbitControls.js&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> scene = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Scene</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> camera = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">PerspectiveCamera</span>(</span><br><span class="line">  <span class="number">90</span>,</span><br><span class="line">  <span class="variable language_">window</span>.<span class="property">innerWidth</span> / <span class="variable language_">window</span>.<span class="property">innerHeight</span>,</span><br><span class="line">  <span class="number">0.1</span>,</span><br><span class="line">  <span class="number">100</span></span><br><span class="line">)</span><br><span class="line">camera.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">30</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> renderer = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">WebGLRenderer</span>()</span><br><span class="line">renderer.<span class="title function_">setSize</span>(<span class="variable language_">window</span>.<span class="property">innerWidth</span>, <span class="variable language_">window</span>.<span class="property">innerHeight</span>)</span><br><span class="line">app.<span class="title function_">appendChild</span>(renderer.<span class="property">domElement</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ambLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">AmbientLight</span>()</span><br><span class="line"><span class="keyword">const</span> dirLight = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">DirectionalLight</span>()</span><br><span class="line">dirLight.<span class="property">position</span>.<span class="title function_">set</span>(<span class="number">5</span>, <span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">scene.<span class="title function_">add</span>(ambLight, dirLight)</span><br><span class="line"></span><br><span class="line"><span class="comment">// code start</span></span><br><span class="line"><span class="keyword">const</span> path = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">CatmullRomCurve3</span>([</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">5</span>, <span class="number">2</span>, <span class="number">9</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(-<span class="number">10</span>, <span class="number">4</span>, <span class="number">4</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">6</span>, -<span class="number">6</span>, <span class="number">0</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">9</span>, -<span class="number">4</span>, <span class="number">6</span>),</span><br><span class="line">  <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Vector3</span>(<span class="number">12</span>, <span class="number">3</span>, <span class="number">3</span>),</span><br><span class="line">])</span><br><span class="line"><span class="keyword">const</span> geometry = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TubeGeometry</span>(path, <span class="number">100</span>, <span class="number">0.5</span>, <span class="number">30</span>)</span><br><span class="line"><span class="keyword">const</span> texLoader = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">TextureLoader</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> texture = texLoader.<span class="title function_">load</span>(<span class="string">&#x27;./imgs/砖墙.jpg&#x27;</span>)</span><br><span class="line">texture.<span class="property">wrapS</span> = <span class="variable constant_">THREE</span>.<span class="property">RepeatWrapping</span></span><br><span class="line">texture.<span class="property">repeat</span>.<span class="property">x</span> = <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> material = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">MeshLambertMaterial</span>(&#123;</span><br><span class="line">  <span class="attr">map</span>: texture,</span><br><span class="line">  <span class="attr">side</span>: <span class="variable constant_">THREE</span>.<span class="property">DoubleSide</span>, <span class="comment">//双面显示看到管道内壁</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> mesh = <span class="keyword">new</span> <span class="variable constant_">THREE</span>.<span class="title class_">Mesh</span>(geometry, material)</span><br><span class="line"></span><br><span class="line">scene.<span class="title function_">add</span>(mesh)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> pointsArr = path.<span class="title function_">getSpacedPoints</span>(<span class="number">5000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> i = <span class="number">0</span></span><br><span class="line">renderer.<span class="title function_">setAnimationLoop</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (i &lt; pointsArr.<span class="property">length</span> - <span class="number">1</span>) &#123;</span><br><span class="line">    camera.<span class="property">position</span>.<span class="title function_">copy</span>(pointsArr[i])</span><br><span class="line">    camera.<span class="title function_">lookAt</span>(pointsArr[i + <span class="number">1</span>])</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  renderer.<span class="title function_">render</span>(scene, camera)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// code end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> controls = <span class="keyword">new</span> <span class="title class_">OrbitControls</span>(camera, app)</span><br></pre></td></tr></table></figure>

<h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><iframe src="/htmls/three.js/18 管道漫游 - Threejs入门" width="100%" height="500px" style="border: 0;"></iframe>
]]></content>
      <categories>
        <category>可视化</category>
      </categories>
      <tags>
        <tag>Threejs</tag>
      </tags>
  </entry>
</search>
